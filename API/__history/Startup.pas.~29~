unit Startup;

interface
uses System.SysUtils,
     Horse,
     Busca.Cep.Controller,
     System.Classes,
     System.SyncObjs,
     System.Threading;

Procedure StartServer;

implementation

procedure StartHorse;
begin
  Writeln('Horse rodando na porta:9000');
  Writeln('Servidor Iniciado!');
  Writeln;
  Writeln('Pressione qualquer tecla para, parar o servidor...');
  TBuscaCepController.GetInstance.Rotas;
  THorse.Listen(9000);
end;

Procedure StartServer;
var
  ServerTask: Itask;
begin
  try
    //Necessario rodar dentro da thread, para liberar o terminal, e poder interagir, para parar o servidor horse
    ServerTask := TTask.Create(StartHorse);
    ServerTask.Start;

    //Colocando o terminal em espera
    Readln;
    Writeln('O Servidor está sendo encerrado!');
    THorse.StopListen;

  finally
    // Libera a controller da memoria
    TBuscaCepController.FreeInstance;
    StopEvent.Free;
    ServerThread := nil;
  end;
end;


end.
